name: Receive PR

# This workflow runs on pull requests from contributors
# It has no access to secrets for security reasons
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  receive:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Save PR number
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
          echo "PR number: ${{ github.event.number }}"

      - name: "Create or update bot comment"
        id: create-comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Find existing bot comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.number }}
            });

            const botComment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Running tests in the background')
            );

            const body = `Running tests in background, please wait for confirmation:
- ðŸ”„ Checking secrets <!-- check-secrets -->
- ðŸ”„ Investigate secrets <!-- check-secrets-copy -->`;

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
              core.setOutput('comment-id', botComment.id);
            } else {
              // Create new comment
              const comment = await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ github.event.number }},
                body: body
              });
              core.setOutput('comment-id', comment.data.id);
            }

      - name: Upload PR info as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr
          path: pr/
